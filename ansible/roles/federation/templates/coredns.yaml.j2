apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: federation-system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: federation-system

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: coredns
  namespace: federation-system
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    resourceNames:
    - coredns
    verbs:
    - get
    - list
    - watch

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: coredns
  namespace: federation-system
subjects:
  - kind: ServiceAccount
    name: coredns
roleRef:
  kind: Role
  name: coredns
  apiGroup: rbac.authorization.k8s.io

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: coredns
  namespace: federation-system
data:
  Corefile: |-
    .:53 {
        cache 30
        errors stderr
        etcd {{fed_zone_name}} {
          path /skydns
          endpoint http://etcd-fed:2379
        }
        health
        loadbalance round_robin
        prometheus localhost:9153
        proxy . /etc/resolv.conf
    }

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: coredns
  name: coredns
  namespace: federation-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coredns
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: coredns
    spec:
      serviceAccountName: coredns
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:007
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: coredns
  name: coredns
  namespace: federation-system
spec:
  ports:
  - name: dns
    port: 53
    protocol: UDP
    targetPort: 53
    nodePort: 30001
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: 53
    nodePort: 30002
  selector:
    app: coredns
  type: NodePort
